name: GigaFile Miner (Manual Only)

# 完全手動実行トリガー
on:
  workflow_dispatch: {}

env:
  BASE_URL: 'https://xgf.nu/'
  MAX_ITER: '200'       # 1ジョブあたりの最大試行回数
  DELAY_SEC: '0.5'      # リクエスト間隔（秒）
  TERM: 'xterm-256color'

jobs:
  run-miner:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v3

      - name: Pythonをセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: 依存パッケージをインストール
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: GigaFile Minerを実行 (inline)
        shell: bash
        run: |
          python - << 'EOF'
import os, time, random, requests

# 設定
BASE_URL = os.getenv('BASE_URL')
MAX_ITER = int(os.getenv('MAX_ITER'))
DELAY_SEC = float(os.getenv('DELAY_SEC'))

# 文字リスト
chars = list("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789")

# ANSIカラー
class Color:
    YELLOW = '\033[33m'
    END    = '\033[0m'

# ランダム文字列生成
rand_str = lambda n: ''.join(random.choices(chars, k=n))

for i in range(1, MAX_ITER+1):
    suf_len = random.randint(4,5)
    token = rand_str(suf_len)
    url = BASE_URL + token
    print(f"[+] [ {token} ] mining... ({i}/{MAX_ITER})", end="\r")
    try:
        resp = requests.get(url, timeout=10)
        # リダイレクトや存在判定
        if len(resp.url) > len(BASE_URL) + suf_len:
            print(f"[*] [ {token} ] HIT! --> {Color.YELLOW}{resp.url}{Color.END}")
    except Exception as e:
        echo = getattr(e, 'message', str(e))
        print(f"Error: {echo}")
    time.sleep(DELAY_SEC)
EOF
